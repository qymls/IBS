<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
>
    <context:property-placeholder location="classpath:jdbc.properties"/><!--引入jdncproperties文件-->
    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"><!--最后关流-->
        <property name="username" value="${jdbc.username}"/><!--不加jdbc的话username是window用户名-->
        <!-- 连接数据库的密码 -->
        <property name="password" value="${jdbc.password}"/>
        <!-- 连接数据库的url地址 -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 连接数据库的驱动 -->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean><!--close最终要关流-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"><!--注册jdbc的bean-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--factorybean方式创建entityManagerFactoryBean-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/><!--引用连接池-->
        <property name="packagesToScan" value="cn.itsource.domain"/><!--实体类的包位置-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"><!--实现厂商-->
                <property name="generateDdl" value="false"/><!--是否建表-->
                <property name="showSql" value="true"/><!--显示sql-->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/><!--数据库-->
            </bean>
        </property>
    </bean>


    <!--事务管理工具类的bean-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>
    <!-- 全注解实现事务管理：Spring会默认去查找一个id为transactionManager的bean来实现AOP
     插入业务逻辑
     如果这个事务管理的工具类bean标签的id不是transactionManager的话，则需要使用transactionmanager属性来指定id-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--集成springdata jap  扫描包-->
    <!--原理，扫描repository下集成的接口，使用动态代理技术创建了一个实现类，来创建的一个的对象-->
    <jpa:repositories base-package="cn.itsource.repository" entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"
                      factory-class="cn.itsource.util.BaseRepositoryFactoryBean"/><!--引用entityManagerFactory和事务管理-->
</beans>