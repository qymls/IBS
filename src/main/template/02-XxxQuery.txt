##引入宏定义
$!define

##使用宏定义设置回调（保存位置与文件后缀）
#save("/main/java/cn/itsource/query", "Query.java")

##使用宏定义设置包后缀
#setPackageSuffix("query")

##使用全局变量实现默认包导入
$!autoImport
import cn.itsource.domain.$!{tableInfo.name};
import com.github.wenhao.jpa.PredicateBuilder;
import com.github.wenhao.jpa.Specifications;
import org.apache.commons.lang3.StringUtils;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;
##使用宏定义实现类注释信息

#tableComment("Query实体类")
public class $!{tableInfo.name}Query extends BaseQuery<$!{tableInfo.name}>{
    private String name;
    @Override
    public Specification getSpecification() {
        Specification<$!{tableInfo.name}> specification = Specifications.<$!{tableInfo.name}>and()
        .like(StringUtils.isNoneBlank(name), "name", "%" + name + "%")
        .build();
        return specification;
    }

    @Override
    public Sort getSort() {
        Sort sort = null;
        if (StringUtils.isNoneBlank(this.getOrderFiled())) {
            Sort.Direction direction = Sort.Direction.ASC;
            if ("desc".equalsIgnoreCase(this.getOrderType())) {
                direction = Sort.Direction.DESC;
            }
            Sort.Order order = new Sort.Order(direction, this.getOrderFiled());
            sort = new Sort(order);/*可变参数*/
        }
        return sort;
    }

    @Override
    public Pageable getPageable() {
        Pageable pageable = new PageRequest(this.getCurrentPage(), this.getPageSize(), getSort());
        return pageable;
    }
    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    

}